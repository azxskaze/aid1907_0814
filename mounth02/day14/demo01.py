'''继承，多态'''
'''从设计的角度：  先有子类再有父类
写好子类，将子类中相同的部分根据需要写成父类

从编码角度：  先有父类再有子类
'''

'''
从数据方面：开闭原则，依赖倒置（指向抽象（方法重写））
可以隔离变化，通过父类进行规范约束，调用子类方法
的时候就不需要考虑变化了，遵循开闭原则，
  
  继承中，父类可以不写也可以实现功能，
  （eg：只要把这些类中的相同作用的功能写
  成同样的名字就能达到重写的目的）
  但是不符合设计逻辑，没有保障
'''
class Transport(object):
    def __init__(self,a):
        self.a=a
    pass
    '''
    python所有类都继承自object
    object可以不用写
    '''

    '''快捷键 ctrl+o可以查看父类'''
class Car(Transport,object):
    def __init__(self):
        super().__init__(a)
    pass